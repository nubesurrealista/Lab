---
name: Build & Sign URLSanitizer APK (External Signing)
on:
  workflow_dispatch: null
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v4
      - name: Clone URLSanitizer source
        run: git clone --depth 1 https://github.com/nubesurrealista/android_URLSanitizer.git
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - name: Make gradlew executable
        run: chmod +x ./android_URLSanitizer/gradlew
      - name: Build unsigned release APK
        run: |
          cd android_URLSanitizer
          ./gradlew assembleRelease --stacktrace
      - name: Find unsigned APK
        id: find_apk
        run: >
          APK_PATH=$(find android_URLSanitizer/app/build/outputs/apk/release -name
          "*.apk" ! -name "*unaligned*" | head -n 1)

          if [ ! -f "$APK_PATH" ]; then
            echo "::error::APK not found!"
            exit 1
          fi

          echo "APK_PATH=$APK_PATH" >> $GITHUB_OUTPUT

          echo "Found APK: $APK_PATH"
      - name: Sign APK with apksigner
        run: >
          echo "${{ secrets.RELEASE_KEYSTORE_B64 }}" | base64 -d > /tmp/nube.p12


          "$ANDROID_HOME/build-tools/$(ls $ANDROID_HOME/build-tools | sort -V | tail -n1)/apksigner" sign \
            --ks /tmp/nube.p12 \
            --ks-key-alias "${{ secrets.RELEASE_KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" \
            --key-pass pass:"${{ secrets.RELEASE_KEY_PASSWORD }}" \
            --out url-sanitizer-signed.apk \
            "${{ steps.find_apk.outputs.APK_PATH }}"

          rm -f /tmp/nube.p12

          echo "APK signed successfully!"
      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: urlsanitizer-release
          path: url-sanitizer-signed.apk
          if-no-files-found: error